from PIL import Image
import glob, os
from os import listdir
from os.path import isfile, join
from sticher import *
import pdb

pdb.set_trace()


# arangeBottomLineByDifferencial()
# arangeBottomLine()
# secondAlgorism()
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")
print("test1")


# mypath = ("./5percent/")
# mypath2 = ("./5percent2/")
# onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]
# imBase = resizeImgByName(mypath+onlyfiles[0], 1, 1)
# baseRGB = getCompareRGBListWithRange(imBase, 0, 1200, 130)
# imNow = resizeImgByName(mypath+onlyfiles[11], 1, 1)
# difflist = []

# for j in range(100):

#     RGBNow = getCompareRGBListWithRange(imNow, 0, 1200-j, 130)
#     difflist.append(compareList(baseRGB,RGBNow))

# print(baseRGB)
# print(RGBNow)
# print(difflist)
# pos = difflist.index(min(difflist))
# print(pos)
# im = Image.new('RGB', (imNow.width, imNow.height))
# im.paste(im=imNow, box=(0, pos))
# imNow.close()
# im.save(mypath2+i, "JPEG")






# # secondAlgorism()

    # if (f==1):
    #     print(f)
    #     im2 = imNow
    # elif f==len(onlyfiles):
    #     im1 = merge2(im1, im2, imNow)
    #     imNow = resizeImg(imNow, 1/10, 1)

    #     merge(im1, imNow).save("result.jpg", "JPEG")
    # else:
    #     imNow = resizeImgByName(mypath+i, 1, 1)
    #     im1 = merge2(im1, im2, imNow)
    #     im2 = imNow
# mypath = ("./5percent/")
# onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]
# imBase = resizeImgByName(mypath+onlyfiles[0], 1, 1)
# baseDiff = getCompareDiffListWithRange(imBase, 0, 1200, 130)

# print(baseDiff)
# imNow = resizeImgByName(mypath+onlyfiles[2], 1, 1)
# difflist = []

# for j in range(100):

#     RGBNow = getCompareRGBListWithRange(imNow, 0, 1200-j, 130)
#     # print(RGBNow)
#     difflist.append(compareList(baseRGB,RGBNow))

# print(difflist)
# print(min(difflist))
# pos = difflist.index(min(difflist))
# print(pos)

